name: releases

on:
  push:
    tags:
    - 'v*'

jobs:
  createrel:
    name: Create draft release
    runs-on: "windows-latest"
    outputs:
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        run: |
          .\.github\workflows\winext\release.ps1 `
            -Repo "${{ github.repository }}" `
            -Token "${{ secrets.GITHUB_TOKEN }}" `
            -TagName "${{ github.ref }}".Split("/")[-1] `
            -prerelease $true

  builddlls:
    # this name is used after, change it with cautious
    name: Build dll for PHP-${{ matrix.phpver }}-${{ matrix.arch }}-${{ (matrix.ts == '0') && 'N' || '' }}TS-${{ (matrix.os == 'windows-latest') && 'VS16' || 'VC15' }}
    needs: createrel
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, windows-2016]
        phpver: ["8.0","7.4","7.3"]
        arch: ["x64"]
        ts: ["0", "1"]
        exclude:
          - os: windows-latest
            phpver: "7.4"
          - os: windows-latest
            phpver: "7.3"
          - os: windows-2016
            phpver: "8.0"
      # we used not-atomic github apis after, so make it 1 only
      # we may use per-matrix outputs to solve this
      # as mentioned in https://github.community/t/bug-jobs-output-should-return-a-list-for-a-matrix-job/128626
      max-parallel: 1
    env:
      deps: openssl,libcurl,zlib,libssh2,nghttp2
      tools_path: C:\tools\phpdev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Prepare caches
        id: cacheprepare
        env:
          UNIX_COLOR: 1
        run: |
          . "./.github/workflows/winext/utils.ps1" -ToolName "cacheprepare" -MaxTry 3
          $os = "${{ matrix.os }}"
          if($os.Equals("windows-latest") -Or $os.Equals("windows-2019")){
            $PhpVCVer = "VS16"
          }elseif($os.Equals("windows-2016")){
            $PhpVCVer = "VC15"
          }
          function phpsdkver{
            $headers = @{
              "accept"="application/vnd.github.v3+json";
              "content-type"="application/json";
              "authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}";
            }
            $info = fetchjson -Uri "https://api.github.com/repos/microsoft/php-sdk-binary-tools/git/ref/heads/master" -Headers $headers
            if(!$info){
              warn "Cannot fetch php-sdk-binary-tools info from api.github.com"
            }else{
              $ver = $info."object"."sha"
              Write-Host "::set-output name=phpsdkver::$ver"
            }
          }
          info "Using $PhpVCVer"
          $ret = 1
          phpsdkver
          ./.github/workflows/winext/getphp.ps1 `
            -PhpVer ${{ matrix.phpver }} `
            -PhpArch ${{ matrix.arch }} `
            -PhpVCVer $PhpVCVer `
            -PhpTs ${{ matrix.ts }} `
            -DryRun 1 &&
          ./.github/workflows/winext/devpack.ps1 `
            -PhpVer ${{ matrix.phpver }} `
            -PhpArch ${{ matrix.arch }} `
            -PhpVCVer $PhpVCVer `
            -PhpTs ${{ matrix.ts }} `
            -DryRun 1 &&
          ./.github/workflows/winext/deps.ps1 `
            ${{ env.deps }} `
            -DryRun 1 &&
          ($ret = 0 | Out-Null)
          exit $ret

      - name: Cache build environments
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.tools_path }}
          key: buildenv-v1-${{ matrix.arch }}-${{ matrix.ts }}-${{ steps.cacheprepare.outputs.phpver }}-${{ steps.cacheprepare.outputs.devpackver }}-${{ steps.cacheprepare.outputs.downloadeddeps }}-${{ steps.cacheprepare.outputs.phpsdkver }}

      - name: Build Swow extension
        id: ext-build
        uses: ./.github/workflows/winext
        with:
          ext-path: ./ext
          tools-path: ${{ env.tools_path }}
          ext-name: swow
          deps: ${{ env.deps }}
          phpver: ${{ matrix.phpver }}
          phpts: ${{ matrix.ts }}
          phparch: ${{ matrix.arch }}
          install: "0"
          conf-args: "--enable-swow-ssl --enable-swow-curl"

      - name: Prepare php for test
        id: php-inst
        continue-on-error: true
        shell: powershell
        env:
          UNIX_COLOR: "1"
        run: |
          Write-Host "::group::Fetching php from windows.php.net"
          .\.github\workflows\winext\getphp.ps1 `
            -PhpVer "${{ matrix.phpver }}" `
            -PhpVCVer "${{ steps.ext-build.outputs.vcver }}" `
            -PhpTs ${{ matrix.ts }}
          $ret = $lastexitcode
          Write-Host "::endgroup::"
          if( 0 -Ne $ret ){
              exit 1
          }
          Write-Host "::group::Installing swow"
          .\.github\workflows\winext\install.ps1 `
            -ExtName "swow" `
            -ExtPath "ext"
          $ret = $lastexitcode
          Write-Host "::endgroup::"
          exit $ret
          

      # shell we move these commands into some bats or composer.json?
      - name: Run extension tests
        shell: cmd
        id: ext-test
        continue-on-error: true
        if: steps.php-inst.outcome == 'success'
        env:
          UNIX_COLOR: "1"
        run: |
          SET NO_INTERACTION=1 && ^
          SET TEST_PHP_EXECUTABLE=C:\tools\phpdev\php\php.exe && ^
          C:\tools\phpdev\php\php.exe ext\tests\runner\run-tests.php ^
            --show-diff ^
            --show-slow 1000 ^
            --set-timeout 30 ^
            --color ^
            ext\tests

      - name: Note about the built dll
        shell: powershell
        env:
          UNIX_COLOR: "1"
        run: |
          .\.github\workflows\winext\uploader.ps1 `
            -RelID "${{ needs.createrel.outputs.id }}" `
            -RunID "${{ github.run_id }}" `
            -RunName "PHP-${{ matrix.phpver }}-${{ matrix.arch }}-${{ (matrix.ts == '0') && 'N' || '' }}TS-${{ (matrix.os == 'windows-latest') && 'VS16' || 'VC15' }}" `
            -fn "ext\${{ matrix.arch }}\Release${{ (matrix.ts == '1') && '_TS' || ''}}\php_swow.dll" `
            -Name "php_swow-php${{ matrix.phpver }}-${{ matrix.arch }}-${{ (matrix.ts == '0') && 'n' || '' }}ts-${{ (matrix.os == 'windows-latest') && 'VS16' || 'VC15' }}.dll" `
            -Repo "${{ github.repository }}" `
            -Token "${{ secrets.GITHUB_TOKEN }}" `
            -TestResult "${{ steps.ext-test.outcome }}"
