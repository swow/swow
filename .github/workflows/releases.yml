name: releases

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Using Swow commmit'
        required: false
  push:
    tags:
    - 'v*'

jobs:
  builddlls:
    # this name is used after, change it with cautious
    name: Build dll for PHP-${{ matrix.php-version }}-${{ matrix.arch }}-${{ (matrix.ts == '0') && 'N' || '' }}TS-VS16
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.2", "8.1", "8.0"]
        arch: ["x64"]
        ts: ["0", "1"]
      max-parallel: 8
    outputs:
      ref: ${{ steps.getref.outputs.ref }}
    env:
      deps: openssl,libcurl,zlib,libssh2,nghttp2
      tools_path: C:\tools\phpdev
      dllname: "php_swow-php${{ matrix.php-version }}-${{ matrix.arch }}-${{ (matrix.ts == '0') && 'n' || '' }}ts-VS16"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ (github.event.inputs && github.event.inputs.ref) || github.ref }}
      - name: Get git commit ref hash
        id: getref
        shell: powershell
        run: |
          $ref = git rev-parse HEAD
          Write-Output "ref=$ref" | Out-File "${env:GITHUB_OUTPUT}" -Append
      - name: Prepare caches
        id: cacheprepare
        env:
          UNIX_COLOR: 1
        run: |
          . "./.github/workflows/winext/utils.ps1" -ToolName "cacheprepare" -MaxTry 3
          $phpver = "${{ matrix.php-version }}"
          if ($phpver.Equals("8.2") -Or $phpver.Equals("8.1") -Or $phpver.Equals("8.0")) {
            $PhpVCVer = "VS16"
          } else {
            Write-Host "::error::Bad version"
            exit 1
          }
          function phpsdkver {
            $headers = @{
              "accept"="application/vnd.github.v3+json";
              "content-type"="application/json";
              "authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}";
            }
            $info = fetchjson -Uri "https://api.github.com/repos/php/php-sdk-binary-tools/git/ref/heads/master" -Headers $headers
            if (!$info) {
              warn "Cannot fetch php-sdk-binary-tools info from api.github.com"
            } else {
              $ver = $info."object"."sha"
              Write-Output "phpsdkver=$ver" | Out-File "${env:GITHUB_OUTPUT}" -Append
            }
          }
          info "Using $PhpVCVer"
          $ret = 1
          phpsdkver
          ./.github/workflows/winext/getphp.ps1 `
            -PhpVer ${{ matrix.php-version }} `
            -PhpArch ${{ matrix.arch }} `
            -PhpVCVer $PhpVCVer `
            -PhpTs ${{ matrix.ts }} `
            -DryRun 1 &&
          ./.github/workflows/winext/devpack.ps1 `
            -PhpVer ${{ matrix.php-version }} `
            -PhpArch ${{ matrix.arch }} `
            -PhpVCVer $PhpVCVer `
            -PhpTs ${{ matrix.ts }} `
            -DryRun 1 &&
          ./.github/workflows/winext/deps.ps1 `
            ${{ env.deps }} `
            -DryRun 1 &&
          ($ret = 0 | Out-Null)
          exit $ret
      - name: Cache build environments
        uses: actions/cache@v2
        with:
          # this should be ok, but there's a bug, excluding not work properly
          # see https://github.com/actions/cache/issues/494
          # see https://github.com/actions/toolkit/issues/713
          # so we must remove dll and ini before
          path: |
            ${{ env.tools_path }}
            !${{ env.tools_path }}\php\ext\php_swow.dll
            !${{ env.tools_path }}\php\php.ini
          key: buildenv-v1-${{ matrix.arch }}-${{ matrix.ts }}-${{ steps.cacheprepare.outputs.php-version }}-${{ steps.cacheprepare.outputs.devpackver }}-${{ steps.cacheprepare.outputs.downloadeddeps }}-${{ steps.cacheprepare.outputs.phpsdkver }}
      - name: Build Swow extension
        id: ext-build
        uses: ./.github/workflows/winext
        with:
          ext-path: ./ext
          tools-path: ${{ env.tools_path }}
          ext-name: swow
          deps: ${{ env.deps }}
          phpver: ${{ matrix.php-version }}
          phpts: ${{ matrix.ts }}
          phparch: ${{ matrix.arch }}
          install: "0"
          conf-args: "--enable-swow-ssl --enable-swow-curl --enable-debug-pack"
      - name: Prepare php for test
        id: php-inst
        continue-on-error: true
        shell: powershell
        env:
          UNIX_COLOR: "1"
        run: |
          Write-Host "::group::Fetching php from windows.php.net"
          .\.github\workflows\winext\getphp.ps1 `
            -PhpVer "${{ matrix.php-version }}" `
            -PhpVCVer "${{ steps.ext-build.outputs.vcver }}" `
            -PhpTs ${{ matrix.ts }}
          $ret = $lastexitcode
          Write-Host "::endgroup::"
          if( 0 -Ne $ret ){
              exit 1
          }
          Write-Host "::group::Installing swow"
          Copy-Item ext\${{ matrix.arch }}\Release${{ matrix.ts == 1 && '_TS' || '' }}\php_swow.dll ${{ env.tools_path }}\php\ext\
          "extension_dir=C:\tools\phpdev\php\ext`nzend_extension=opcache`nextension=swow`n" | Out-File ${{ env.tools_path }}\php\php.ini -Encoding ASCII # for no BOM
          php --ri swow
      # shell we move these commands into some bats or composer.json?
      - name: Run extension tests
        shell: cmd
        id: ext-test
        continue-on-error: true
        if: steps.php-inst.outcome == 'success'
        env:
          UNIX_COLOR: "1"
        run: |
          SET NO_INTERACTION=1 && ^
          SET TEST_PHP_EXECUTABLE=C:\tools\phpdev\php\php.exe && ^
          C:\tools\phpdev\php\php.exe tools/test-extension.php
      - name: Generate information about this dll
        shell: powershell
        run: |
          $fn = "${{ env.dllname }}.dll"
          Copy-Item ext\${{ matrix.arch }}\Release${{ matrix.ts == 1 && '_TS' || '' }}\php_swow.dll $fn
          Copy-Item ext\${{ matrix.arch }}\Release${{ matrix.ts == 1 && '_TS' || '' }}\php_swow.pdb "${{ env.dllname }}.pdb"
          @{
            "name" = $fn;
            "size" = (Get-Item $fn).Length;
            "hash" = (Get-FileHash -Algorithm SHA256 $fn).Hash;
            "result" = "${{ steps.ext-test.outcome }}";
            "runid" = "${{ github.run_id }}";
            "jobname" = "PHP-${{ matrix.php-version }}-${{ matrix.arch }}-${{ (matrix.ts == '0') && 'N' || '' }}TS-VS16";
          } | ConvertTo-Json -Compress | Out-File "${fn}.json" -Encoding ASCII # for no BOM
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.getref.outputs.ref }}"
          path: |
            ${{ env.dllname }}.dll
            ${{ env.dllname }}.pdb
            ${{ env.dllname }}.dll.json
      # see notes at cache step
      # TODO: remove this step when upstream fixed the bug
      - name: Remove ini and dll to avoid them being cached
        shell: powershell
        run: |
          Remove-Item ${{ env.tools_path }}\php\ext\php_swow.dll
          Remove-Item ${{ env.tools_path }}\php\php.ini
  uploaddlls:
    name: Upload DLLs
    if: ${{ github.event_name == 'push' }}
    needs:
      - builddlls
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        run: |
          .\.github\workflows\winext\release.ps1 `
            -Repo "${{ github.repository }}" `
            -Token "${{ secrets.GITHUB_TOKEN }}" `
            -TagName "${{ github.ref }}".Split("/")[-1] `
            -prerelease $true
      - name: Fetch artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.builddlls.outputs.ref }}
          path: .
      - name: Upload all dlls
        shell: powershell
        env:
          UNIX_COLOR: "1"
        run: |
          .\.github\workflows\winext\uploader.ps1 `
            -RelId "${{ steps.create_release.outputs.id }}" `
            -Repo "${{ github.repository }}" `
            -Token "${{ github.token }}"
